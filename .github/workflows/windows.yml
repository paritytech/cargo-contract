name: continuous-intergration/windows

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - v*
    paths-ignore:
      - 'README.md'

jobs:
  check:
    name: build-contract-template
    strategy:
      matrix:
        platform:
          - windows-latest
        toolchain:
          - nightly
    runs-on: ${{ matrix.platform }}
    env:
      RUST_BACKTRACE: full
    steps:

      - uses: engineerd/configurator@v0.0.6
        with:
          name: "wasm-opt.exe"
          url: "https://github.com/WebAssembly/binaryen/releases/download/version_101/binaryen-version_101-x86_64-windows.tar.gz"
          pathInArchive: "binaryen-version_101/bin/wasm-opt.exe"

      - name: Checkout sources & submodules
        uses: actions/checkout@master
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Install toolchain
        id: toolchain
        uses: actions-rs/toolchain@master
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          components: rust-src
          override: true

      - name:                      Rust Cache
        uses:                      Swatinem/rust-cache@v1.2.0

      - name: Build contract template on ${{ matrix.platform }}-${{ matrix.toolchain }}
        run: |
          wasm-opt --version
          cargo -vV

          cargo +nightly run -- contract --version
          cargo +nightly run -- contract new foobar
          echo "[workspace]" >> foobar/Cargo.toml
          mkdir foobar\src
          mv foobar/lib.rs foobar\src\lib.rs
          ((Get-Content -path foobar\Cargo.toml -Raw) -replace 'lib.rs','src/lib.rs') | Set-Content -Path foobar\Cargo.toml
          Get-Content -path foobar\Cargo.toml -Raw

          cargo +nightly install --path .
          cd foobar
          cargo +nightly run -- contract check
          cargo +nightly run -- contract build
