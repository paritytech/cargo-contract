name: check
on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - v*
    paths-ignore:
      - 'README.md'
jobs:
  build-contract-template:
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: full
    steps:
      - name: Install wasm-opt
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install binaryen

      - name: Install wasm-opt
        if: ${{ matrix.os == 'macos-latest' }}
        run: brew install binaryen

      - name: Install wasm-opt
        if: ${{ matrix.os == 'windows-latest' }}
        uses: engineerd/configurator@v0.0.8
        with:
          name: wasm-opt.exe
          url: https://github.com/WebAssembly/binaryen/releases/download/version_109/binaryen-version_109-x86_64-windows.tar.gz
          pathInArchive: binaryen-version_109/bin/wasm-opt.exe

      # everything is accomplished on stable except formatting
      - name: Install nightly toolchain
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          default: false
          components: rustfmt

      - name: Install stable toolchain
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
          target: wasm32-unknown-unknown
          components: rust-src, clippy

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-dylint
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --version ^2 cargo-dylint

      - name: Install dylint-link
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --version ^2 dylint-link

      - name: Checkout sources & submodules
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Check Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: +nightly fmt --verbose --all -- --check

      - name: Check Template
        run: |
          wasm-opt --version
          cargo -vV
          cargo dylint --version
          cargo run -- contract --version
          cargo run -- contract new foobar
          echo "[workspace]" >> foobar/Cargo.toml
          cargo run -- contract build --manifest-path=foobar/Cargo.toml
          cargo run -- contract check --manifest-path=foobar/Cargo.toml
          cargo run -- contract test --manifest-path=foobar/Cargo.toml
